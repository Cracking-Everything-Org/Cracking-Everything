// # Flatten nested list
// #
// # Question:
// # Given a list where each element can be either an int or a reference to another list of the same type, write a function to flatten the lists
// #
// # Examples:
// # [[1], 2, [3, [4]]] --> [1, 2, 3, 4]
// # [[1, [2], 3], [4, [5]]] --> [1, 2, 3, 4, 5]

class Flatten {

stack<Flatten> stk;

  public vector<int> flattenList(vector<Flatten>& list) {
    
  Flatten(vector<Flatten> &list) {
    int size = list.size();
    for (int i = size - 1; i >= 0; i--) {
      stk.push(list[i]);
    }
  }
  
  public int next() {
    int value = stk.top()->val;
    stk.pop();
    return value;
  }
  
  public bool hasNext() {
    while(!stk.empty()) {
      auto top = stk.top();
      if (is_numeric(top)) {
        return true;
      }
      stk.pop();
      
      auto list = top.getList();
      int size = top.size();
      for (int i = size - 1; i >= 0; i--) {
        stk.push(list[i]);
      }
    }
    return false;
  }

  bool isNumeric() {}
    
  
}